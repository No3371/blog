<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>#</title>
 <link href="/atom.xml" rel="self"/>
 <link href="https://blog.bastudio.dev//"/>
 <updated>2021-09-29T01:37:50+00:00</updated>
 <id>https://blog.bastudio.dev</id>
 <author>
   <name></name>
   <email></email>
 </author>

 
   
 
   
 
   
 
   
   <entry>
     <title>Free &amp; Private PushBullet with PatchBay</title>
     <link href="https://blog.bastudio.dev//posts/free-private-pushbullet-with-patchbay/en"/>
     <updated>2021-08-20T00:00:00+00:00</updated>
     <id>https://blog.bastudio.dev/posts/free-private-pushbullet-with-patchbay/free-private-pushbullet-with-patchbay</id>
     <content type="html">&lt;p&gt;&lt;a href=&quot;https://patchbay.pub&quot;&gt;PatchBay&lt;/a&gt; is a free and public service that “patch” Http &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt; together. For example, you &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt; from &lt;code class=&quot;highlighter-rouge&quot;&gt;https://patchbay.pub/123&lt;/code&gt; and POST “321” to &lt;code class=&quot;highlighter-rouge&quot;&gt;https://patchbay.pub/123&lt;/code&gt;, the &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt; side will receive “321”.&lt;/p&gt;

&lt;p&gt;Sounds boring, eh? But it could be the most clever thing I’ve seen these years, and it’s free for anyone to use without any authentication, which enable a lot of possibilities.&lt;/p&gt;

&lt;p&gt;I’ve made several personal tools based on PatchBay, for example, PushBullet:&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/1f16e99fc1b49cdd4be25adc9aaab025.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;The powershell script takes 1 parameter: the channel name. Channel Name is the only input to PatchBay that decide where you &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt; from/&lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt; to, so as long as no one share the same channel name with you, we can say the channel is yours.&lt;/p&gt;

&lt;p&gt;As you may have noticed, the script actually use &lt;code class=&quot;highlighter-rouge&quot;&gt;https://patchbay.pub/pubsub/&lt;/code&gt;, which is the pubsub mode of PatchBay, this means all PC running this script will receive data POSTed to the pubsub channel, not just 1 PC.&lt;/p&gt;

&lt;p&gt;I mainly POST stuff I wanna read later with curl from my joc PC to my home PC, if I really need it, I can also POST from my Android phone, working with PatchBay feels really nice and easy, because you can do Http &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt; everywhere as long as you are connected.&lt;/p&gt;

&lt;p&gt;The reason why I don’t use the actual PushBullet but this is that, I don’t want to login on my job PC, I’m the type that feels insecure and cares alot about my privacy. For people like me, things like PatchBat is really awesome, though it’s not actually “secure”, but its login-less nature is trully useful.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;EDIT 21/09/22
It seems patchbay.pub is down :sad:&lt;/p&gt;
</content>
   </entry>
   
 
   
 
   
 
   
 
   
   <entry>
     <title>Jekyll: Make it Multi-Lingual</title>
     <link href="https://blog.bastudio.dev//posts/jekyll-make-it-multilingual/en"/>
     <updated>2021-05-07T00:00:00+00:00</updated>
     <id>https://blog.bastudio.dev/posts/jekyll-make-it-multilingual/jekyll-make-it-multilingual</id>
     <content type="html">&lt;p&gt;As you may have noticed, this blog has basic level of support of multilingualism. There’re several plugins out there to help us creating multi-lingual jekyll sites, but I eventually decided to make it simple. This blog’s multilingualism is achieved with liquid tags, front matters, also a amazing plugin called &lt;a href=&quot;https://github.com/ample/jekyll-placeholders&quot;&gt;jekyll-placeholders&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Our objectives here are:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;To enble publishing posts in different lanaguages, all by Jekyll’s functionality, without javascript.&lt;/li&gt;
  &lt;li&gt;It should be an addition not a requirement, so it should be okay to publish posts in whatever and any number of languages.&lt;/li&gt;
  &lt;li&gt;It should be easy to navigate between languages.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;What we can take advantages of:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;We can add whatever we want as &lt;a href=&quot;https://jekyllrb.com/docs/front-matter/&quot;&gt;Front Matter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;With &lt;a href=&quot;https://github.com/ample/jekyll-placeholders&quot;&gt;jekyll-placeholders&lt;/a&gt;, any Front Matter could be used in &lt;a href=&quot;https://jekyllrb.com/docs/permalinks/&quot;&gt;Permalink&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Front Matters are accessible in Liquid tags, this allows us to know what languages are available for a post in Layouts/Includes.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;generate-posts-of-languages&quot;&gt;Generate Posts of Languages&lt;/h2&gt;

&lt;p&gt;The Front Matter of this post is shown below:&lt;/p&gt;
&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;post&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Jekyll:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Make&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Multi-Lingual&quot;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;foss&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;published&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;en&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As you can see, I specified the &lt;strong&gt;language&lt;/strong&gt; entry, which contains “en”, this means, this post is written in “en” (It doesn’t matter what language it actually is, it’s just a variable).&lt;/p&gt;

&lt;p&gt;As for now, the post is only in English, if in the future I write another version in, for example “tw”, then it’d become:&lt;/p&gt;
&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;post&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Jekyll:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Make&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Multi-Lingual&quot;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;foss&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;published&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;en&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;other_language_versions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;jekyll-make-it-multilingual/2021-05-31-jekyll-make-it-multilingual.md=tw&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A &lt;code class=&quot;highlighter-rouge&quot;&gt;other_language_versions&lt;/code&gt; front matter is added, and it’s in “path_relative_to_post=lang” format. This entry will be used by Liquid to generate buttons to navigate between language versions, I’ll show how to achieve that in the next section.&lt;/p&gt;

&lt;p&gt;And this is my post permalink:&lt;/p&gt;
&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;collections:
  posts:
    output: true
    permalink: posts/:title/:language
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/ample/jekyll-placeholders&quot;&gt;jekyll-placeholders&lt;/a&gt;, I can reference the &lt;strong&gt;language&lt;/strong&gt; Front Matter here, so when Jekyll compiles the site, this post would be &lt;code class=&quot;highlighter-rouge&quot;&gt;posts/2021-05-07-jekyll-make-it-multilingual/en.html&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;By the way, The reason why I decide to place language at the tail is, It’d much easier to select langugage by url, though my site’d be very easy to switch language by buttons, It’s still a good thing to do.&lt;/p&gt;

&lt;h2 id=&quot;show-the-lanaguage-options&quot;&gt;Show The Lanaguage Options&lt;/h2&gt;

&lt;p&gt;In my home layout, this is how my post items are rendered:&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
          {%- assign date_format = site.moving.date_format | default: &quot;%b %-d, %Y&quot; -%} // My site is based on [Moving](https://github.com/huangyz0918/moving) theme
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post-meta&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; // Show the date of the post
            {{ post.date | date: date_format }}
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;black-link post-link-layout&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ post.url | prepend: site.baseurl}}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; // How it links to the acutal post page
            {{ post.title | escape }}
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
          {%- if post.language -%} // If the post has **language** front matter
              &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;language_tag&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{ post.language | upcase }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt; // en -&amp;gt; EN
          {%- endif -%}
          {%- if post.other_language_versions.size &amp;gt; 0 -%} // If the post has **other_language_versions** front matter
            {%- for L in post.other_language_versions -%} // Iterate through all options
              {%- assign data =  L | split: &quot;=&quot;  -%} // Split the entry, take jekyll-make-it-multilingual/2021-05-31-jekyll-make-it-multilingual.md=tw as example, data[0] will be jekyll-make-it-multilingual/2021-05-31-jekyll-make-it-multilingual.md and data[1] will be tw.
              &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;language_option&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{% link _posts/{{ data[0] }} %}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{ data[1] | upcase }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt; // We use **link** here, so Jekyll will do the job for us to get the actual link, data[1] is showing what language version the button leads to
            {%- endfor -%}
          {%- endif -%}
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Just after these steps, We can present posts in multiple languages.&lt;/p&gt;

</content>
   </entry>
   
 
   
   <entry>
     <title>寫一個自己愛不釋手的工具：Obsidian Regex Pipeline</title>
     <link href="https://blog.bastudio.dev//posts/I-built-something-i-love-to-use-obsidian-regex-pipeline/tw"/>
     <updated>2021-05-07T00:00:00+00:00</updated>
     <id>https://blog.bastudio.dev/posts/I-built-something-i-love-to-use-obsidian-regex-pipeline/I-built-something-i-love-to-use-obsidian-regex-pipeline</id>
     <content type="html">&lt;h2 id=&quot;obsidian&quot;&gt;Obsidian&lt;/h2&gt;
&lt;p&gt;自從開始使用 &lt;a href=&quot;https://obisidian.md&quot;&gt;Obsidian&lt;/a&gt; 以來，也超過半年了。一開始是抱著嘗試新東西的心態，剛好要學日文就拿來收納整理日文筆記，很快就愛上了這東西，一邊學習新知識一邊建立筆記，充實自己的資料庫的感覺，讓我這個數位倉鼠症患者實在是快樂得停不下來，有些下班後的夜晚坐下來編修筆記，轉眼就到了睡覺時間…&lt;/p&gt;

&lt;p&gt;Obsidian 是一套網路化知識管理工具，是近年變得比較熱門的一種工具類型，其始祖是 Roam Research。這類工具的特色是基於知識具有關聯性的理念，使用者在編寫筆記的時候，標註筆記與筆記之間的關聯，而它們可以計算筆記之間的關聯，視覺化地呈現出一個網路圖表！隨著我們填入越多筆記，資料庫網路就會對我們越來越有價值，成為我們的虛擬大腦、外接記憶儲存空間，更棒的是在這個過程中，借助筆記之間的彼此連結，我們對於一個知識體系的學習效率也會大幅提高。&lt;/p&gt;

&lt;p&gt;Obsidian 真的非常棒！但今天我要說的是我自己寫了一個插件的故事…（是的！Obisidian 支援第三方插件，太棒了）&lt;/p&gt;

&lt;h2 id=&quot;監修筆記很花時間&quot;&gt;監修筆記很花時間&lt;/h2&gt;
&lt;p&gt;這半年來持續投入時間的結果就是我有了一個超大又井井有條的日文筆記資料庫，再來就是我開始覺得手動調整格式很煩！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;Obsidian_kHYkCZgx4i.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;隨便舉個例子，這是我從 goo 辭書上使用 Firefox 的 MardDownload 插件抓下來的&lt;a href=&quot;https://dictionary.goo.ne.jp/word/%E8%A8%88%E3%82%8B/&quot;&gt;計る&lt;/a&gt;條目的內容：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 計る／量る／測る／図る／謀る／諮る（はかる）の意味 - goo国語辞書

はか・る【計る／量る／測る／図る／謀る／諮る】

の解説


------------------------------
［動ラ五（四）］《「[はか](https://dictionary.goo.ne.jp/word/%E8%A8%88_%28%E3%81%AF%E3%81%8B%29/#jn-174670)」に活用語尾の付いたもの》

1.  **１** （計る・測る・量る）
    
    1.  ㋐ある基準をもとにして物の度合いを調べる。特に、はかり・ゲージなどの計測機器で測定する。「體溫を─・る」「距離を─・る」
        
    2.  ㋑推しはかって見當をつける。おもんぱかる。忖度 (そんたく) する。「己をもって人を─・る」「真意を─・りかねる」
        

1.  **２** （図る・謀る）
    
    1.  ㋐物事を考え合わせて判斷する。見はからう。「時期を─・る」「敵情を─・る」
        
    2.  ㋑企てる。もくろむ。「自殺を─・る」
        

1.  **３** （謀る）
    
    1.  ㋐はかりごとをする。たくらむ。「悪事を─・る」
        
    2.  ㋑あざむく。たばかる。「さては─・られたか」
        

1.  **４** （図る）
    
    1.  ㋐くふうして努力する。「再起を─・る」「利益を─・る」
        
    2.  ㋑うまく處理する。とりはからう。「便宜を─・る」
        

1.  **５** （諮る）相談する。「會議に─・って決める」
    

\[補説\]**1**㋐について、「計る」は時間・數、「測る」は長さ・高さ・深さ・広さ・程度、「量る」は重さ・容積を調べる際に使うことが多い。

\[可能\]**はかれる**

類語

-   [計る(はかる)](https://dictionary.goo.ne.jp/word/%E8%A8%88%E3%82%8B//#jn-174852)
-   [測る(はかる)](https://dictionary.goo.ne.jp/word/%E8%A8%88%E3%82%8B//#jn-174852)

関連語

-   [計測(けいそく)](https://dictionary.goo.ne.jp/word/%E8%A8%88%E6%B8%AC/#jn-66796)
-   [目測(もくそく)](https://dictionary.goo.ne.jp/word/%E7%9B%AE%E6%B8%AC/#jn-218932)
-   [目份量(めぶんりょう)](https://dictionary.goo.ne.jp/word/%E7%9B%AE%E5%88%86%E9%87%8F/#jn-217869)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;比對一下原始網頁，會發現有一些奇怪的地方，比如網站上的數字清單沒有辦法正確捕捉；另外，對於筆記的格式我們可能有一些要求，比如說去除空行、冗餘文字。&lt;/p&gt;

&lt;p&gt;在 Obsidian 中渲染出來的結果是這樣：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;rendered.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;不可接受、絕對不可接受。&lt;/p&gt;

&lt;p&gt;來看看要整理這則筆記我要做多少動作：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;manual.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;做一個養活自己的成熟工程師&quot;&gt;做一個養活自己的成熟工程師&lt;/h2&gt;

&lt;p&gt;是時候展現我真正的實力了！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;using_pipeline.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;這就是我為了飛速監修而寫的插件 &lt;a href=&quot;https://github.com/No3371/obsidian-regex-pipeline&quot;&gt;Regex Pipleline&lt;/a&gt;，利用預先定義的 Regex 取代規則，快速調整筆記內容。&lt;/p&gt;

&lt;h2 id=&quot;obsidian-的插件不難寫&quot;&gt;Obsidian 的插件不難寫&lt;/h2&gt;

&lt;p&gt;Obsidian 的插件 API 很不錯！其實我不常做這種事情，JS/TS 也算是滿生疏的一個領域，但仔細觀察了一下之後還是很容易上手了。個人心得是不像一般為了推出 API 而推出 API，實際使用上，感覺官方有認真在思考，根據開發者可能會有的需求去設計實用方便的 API。&lt;/p&gt;

&lt;p&gt;比如，我本來預期，這類型的 API 會提供我「現在選取的文字開頭&amp;amp;結尾的 Index」，但它實際上直接提供了一個 &lt;code class=&quot;highlighter-rouge&quot;&gt;getSelection()&lt;/code&gt; 可以取得完整的已選取文字，還提供了 &lt;code class=&quot;highlighter-rouge&quot;&gt;replaceSelection()&lt;/code&gt; 讓你直接替換掉以選取的文字，相關的還有 &lt;code class=&quot;highlighter-rouge&quot;&gt;somethingSelected()&lt;/code&gt;… 可以說是相當高階且人性化的 API 了，插件作者完全可以 Focus 在實現插件功能。&lt;/p&gt;

&lt;p&gt;範例插件的架構也是簡單，且參數、變數、方法的命名可讀性高，我一看就大概就能對照 Obsidian 的介面看出代表什麼東西。&lt;/p&gt;

&lt;p&gt;我算是對 TS/JS 這種以操作 DOM 來呈現畫面的機制很不熟的，但看了看範例的作法，大概就知道了要怎麼實作畫面元件。&lt;/p&gt;

&lt;p&gt;作為一個 Electron App，用 Console 開發除錯也是輕輕鬆鬆。&lt;/p&gt;

&lt;h2 id=&quot;插件審核&quot;&gt;插件審核&lt;/h2&gt;
&lt;p&gt;想要發布插件，讓插件會在 Obsidian 內建的第三方插件搜尋清單中出現，必須向 &lt;em&gt;Obsidian-Releases&lt;/em&gt; 提交 PR，&lt;a href=&quot;https://github.com/obsidianmd/obsidian-releases/pull/239#issuecomment-817929015&quot;&gt;例&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;官方的開發者會認真的看過你的程式碼之後才 Merge，整體來說是不錯的經驗。&lt;/p&gt;
</content>
   </entry>
   
 

</feed>